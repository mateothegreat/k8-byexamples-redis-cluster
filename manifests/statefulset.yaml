# apiVersion: apps/v1beta1
# kind: StatefulSet
# metadata:
#   name: redis-cluster
# spec:
#   serviceName: redis-cluster
#   replicas: 6
#   template:
#     metadata:
#       labels:
#         app: redis-cluster
#       annotations:
#         # NOTE: Init container must be idempotent
#         # Add a baked-in Redis config file that enables cluster mode
#         #pod.alpha.kubernetes.io/init-containers: '[
#         #]'
#     spec:
#       terminationGracePeriodSeconds: 10
#       #hostNetwork: true
#       containers:
#       - name: redis-cluster
#         image: redis:3.2.1
#         ports:
#         - containerPort: 6379
#           name: client
#         - containerPort: 16379
#           name: gossip
#         command:
#         - sh
#         args:
#         - /conf/bootstrap-pod.sh
#         # Ensure that Redis is online before initializing the next node.
#         # TODO: Test that the cluster node is init'd properly.
#         readinessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - "redis-cli -h $(hostname) ping"
#           initialDelaySeconds: 15
#           timeoutSeconds: 5

#         # Mark a node as down if Redis server stops running
#         livenessProbe:
#           exec:
#             command:
#             - sh
#             - -c
#             - "redis-cli -h $(hostname) ping"
#           initialDelaySeconds: 20
#           periodSeconds: 3
#         env:
#         - name: POD_NAMESPACE
#           valueFrom:
#             fieldRef:
#               fieldPath: metadata.namespace
#         volumeMounts:
#         - name: conf
#           mountPath: /conf
#           readOnly: false
#         - name: podinfo
#           mountPath: /etc/podinfo
#           readOnly: false
#       volumes:
#       # Insert our pre-baked Redis configuration file into /conf/redis.conf
#       - name: conf
#         configMap:
#           name: redis-cluster-config
#           items: 
#           - key: redis.conf
#             path: redis.conf
#           - key: bootstrap-pod.sh  # TODO: Move this or extract it into its own Docker image
#             path: bootstrap-pod.sh
#       # The init container will use this info to find cluster peers
#       - name: podinfo
#         downwardAPI:
#           items:
#             - path: "labels"
#               fieldRef:
#                 fieldPath: metadata.labels
#             - path: "annotations"
#               fieldRef:
#                 fieldPath: metadata.annotations
#             - path: "pod_name"
#               fieldRef:
#                 fieldPath: metadata.name
#             - path: "pod_namespace"
#               fieldRef:
#                 fieldPath: metadata.namespace